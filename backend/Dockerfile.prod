FROM node:24-alpine AS base

# Instalar dependencias del sistema necesarias
RUN apk add --no-cache libc6-compat openssl curl

WORKDIR /app

# ==========================================
# STAGE 1: Instalar dependencias
# ==========================================
FROM base AS deps
COPY package*.json ./
COPY prisma ./prisma/

# Instalar TODAS las dependencias (necesarias para build)
RUN npm ci

# ==========================================
# STAGE 2: Build de la aplicación
# ==========================================
FROM base AS builder
WORKDIR /app

# Copiar dependencias instaladas
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Generar cliente Prisma
RUN npx prisma generate

# Compilar TypeScript
RUN npm run build

# ==========================================
# STAGE 3: Imagen de producción
# ==========================================
FROM base AS runner
WORKDIR /app

# Crear usuario no-root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nodejs

# Copiar archivos necesarios para instalar dependencias de producción
COPY package*.json ./
COPY prisma ./prisma/

# Instalar solo dependencias de producción
RUN npm ci --omit=dev && npm cache clean --force

# Generar cliente Prisma en producción
RUN npx prisma generate

# Copiar código compilado desde builder
COPY --from=builder --chown=nodejs:nodejs /app/dist ./dist
COPY --from=builder --chown=nodejs:nodejs /app/node_modules/.prisma ./node_modules/.prisma

# Crear directorio para uploads
RUN mkdir -p /app/uploads && chown nodejs:nodejs /app/uploads

USER nodejs

EXPOSE 3001

# Healthcheck mejorado
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3001/api/health || exit 1

CMD ["node", "dist/server.js"]