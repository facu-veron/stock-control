generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String    @id @default(cuid())
  name        String    @unique
  description String?
  color       String?   @default("#3b82f6")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relaciones
  products    Product[]

  @@map("categories")
}

model Supplier {
  id        String   @id @default(cuid())
  name      String   @unique
  contact   String?
  email     String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  products  Product[]

  @@map("suppliers")
}


model Tag {
  id       String    @id @default(cuid())
  name     String    @unique

  // Relación muchos a muchos implícita
  products Product[] @relation("ProductTags")

  @@map("tags")
}

model Product {
  // Basic information
  active      Boolean  @default(true)
  barcode     String?  @unique
  brand       String?
  color       String?
  cost        Float?   @default(0)
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  image       String?
  ivaRate     Float?
  material    String?
  maxStock    Int?
  minStock    Int      @default(0)
  name        String
  price       Float
  size        String?
  sku         String?  @unique
  stock       Int      @default(0)
  unit        String   @default("unidad")
  updatedAt   DateTime @updatedAt

  // Relaciones
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  supplierId  String?
  supplier    Supplier? @relation(fields: [supplierId], references: [id], onDelete: SetNull)

  tags        Tag[]     @relation("ProductTags") // many-to-many implícita

  @@index([categoryId])
  @@index([sku])
  @@index([barcode])
  @@map("products")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(EMPLOYEE)
  pin       String?  // Añadir este campo si no lo tenías
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

enum Role {
  ADMIN
  EMPLOYEE
}
